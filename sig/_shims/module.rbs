class Module < Object
  # "private" and "protected" accept an array of symbols.
  # Like when you do `private attr_reader :foo, :bar`
  def private: (Array[Symbol]) -> Array[Symbol]
             | ...
  def protected: (Array[Symbol]) -> Array[Symbol]
             | ...

  # "define_method" accepts a block that's evaluated within
  # the context of the instance:
  def define_method: (id symbol) { () [self: instance] -> untyped } -> Symbol
                   | ...
end
