# This file is generated by the templates/template.rb script and should not be
# modified manually. See templates/sig/prism/_private/dot_visitor.rbs.erb
# if you are looking to modify the template

module Prism
  class DotVisitor < Visitor
    class Field
      attr_reader name: String
      attr_reader value: String?
      attr_reader port: bool

      def initialize: (String name, String? value, bool port) -> void
      def to_dot: () -> String
    end

    class Table
      attr_reader name: String
      attr_reader fields: Array[Field]

      def initialize: (String name) -> void
      def field: (String name, ?String? value, ?port: bool) -> void
      def to_dot: () -> String
    end

    class Digraph
      attr_reader nodes: Array[String]
      attr_reader waypoints: Array[String]
      attr_reader edges: Array[String]

      def initialize: () -> void
      def node: (String value) -> void
      def waypoint: (String value) -> void
      def edge: (String value) -> void

      def to_dot: () -> String
    end

    attr_reader digraph: Digraph

    private

    def node_id: (Prism::node node) -> String
    def location_inspect: (Location location) -> String

    def arguments_node_flags_inspect: (ArgumentsNode node) -> String
    def array_node_flags_inspect: (ArrayNode node) -> String
    def call_node_flags_inspect: (CallAndWriteNode | CallNode | CallOperatorWriteNode | CallOrWriteNode | CallTargetNode | IndexAndWriteNode | IndexOperatorWriteNode | IndexOrWriteNode | IndexTargetNode node) -> String
    def encoding_flags_inspect: (XStringNode node) -> String
    def integer_base_flags_inspect: (IntegerNode | RationalNode node) -> String
    def interpolated_string_node_flags_inspect: (InterpolatedStringNode node) -> String
    def keyword_hash_node_flags_inspect: (KeywordHashNode node) -> String
    def loop_flags_inspect: (UntilNode | WhileNode node) -> String
    def parameter_flags_inspect: (BlockLocalVariableNode | BlockParameterNode | KeywordRestParameterNode | OptionalKeywordParameterNode | OptionalParameterNode | RequiredKeywordParameterNode | RequiredParameterNode | RestParameterNode node) -> String
    def range_flags_inspect: (FlipFlopNode | RangeNode node) -> String
    def regular_expression_flags_inspect: (InterpolatedMatchLastLineNode | InterpolatedRegularExpressionNode | MatchLastLineNode | RegularExpressionNode node) -> String
    def shareable_constant_node_flags_inspect: (ShareableConstantNode node) -> String
    def string_flags_inspect: (SourceFileNode | StringNode node) -> String
    def symbol_flags_inspect: (SymbolNode node) -> String
  end
end
